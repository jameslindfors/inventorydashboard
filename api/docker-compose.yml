version: '3.9'
services:
  analytics-service:
    build:
      context: ./analytics-service
      dockerfile: Dockerfile
    volumes:
      - ./analytics-service:/src/
    environment:
      - FASTAPI_DEBUG=True
    restart: always
    networks:
      - api_net
  inventory-service:
    build:
      context: ./inventory-service
      dockerfile: Dockerfile
    volumes:
      - ./inventory-service:/src/
    environment:
      - FASTAPI_DEBUG=True 
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=password
      - POSTGRESQL_DATABASE=dev
    restart: always
    depends_on:
      - postgres
    networks:
      - postgres
      - api_net
  auth-service:
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    volumes:
      - ./auth-service:/src/
    restart: always
    networks:
      - api_net
  nginx:
    build:
      context: ./nginx
      dockerfile: Dockerfile
    depends_on:
      - analytics-service
      - inventory-service
      - auth-service
    ports:
      - 443:443
      - 80:80
    restart: always
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    healthcheck:
        test: curl --fail http://localhost || exit 1
        interval: 60s
        retries: 5
        start_period: 20s
        timeout: 10s
    networks:
      - api_net
  rabbitmq:
    image: rabbitmq:3.10.7-management-alpine
    container_name: 'rabbitmq'
    depends_on:
        - nginx
    ports:
        - 5672:5672
        - 15672:15672
    restart: always
    volumes:
        - ~/.docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
        - ~/.docker-conf/rabbitmq/log/:/var/log/rabbitmq
    networks:
        - rabbitmq_net
  postgres:
    image: postgres:alpine3.16
    container_name: 'postgres'
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-dev}
      PGDATA: /data/postgres
    ports:
      - 5432:5432
    restart: unless-stopped
    volumes:
      - postgres:/data/postgres
    networks:
      - postgres
networks:
  postgres:
    driver: bridge
  rabbitmq_net:
    driver: bridge
  api_net:
volumes:
    postgres:
    pgadmin:
